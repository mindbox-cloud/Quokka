//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Ivonin\Code\Quokka\Grammar\Quokka\QuokkaLex.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Quokka.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
internal partial class QuokkaLex : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SingleInstructionComment=1, OutputInstructionStart=2, ControlInstructionStart=3, 
		Fluff=4, InstructionEnd=5, If=6, EndIf=7, End=8, Else=9, ElseIf=10, For=11, 
		In=12, EndFor=13, Null=14, MemberAccessOperator=15, Pipe=16, CommaSeparator=17, 
		LeftParen=18, RightParen=19, And=20, Or=21, Not=22, Equals=23, NotEquals=24, 
		GreaterThan=25, LessThan=26, GreaterThanOrEquals=27, LessThanOrEquals=28, 
		Plus=29, Minus=30, Multiply=31, Divide=32, Number=33, Digit=34, DoubleQuotedString=35, 
		SingleQuotedString=36, Identifier=37, WhiteSpace=38;
	public const int
		Instruction=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "Instruction"
	};

	public static readonly string[] ruleNames = {
		"SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Identifier", "WhiteSpace"
	};


	public QuokkaLex(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public QuokkaLex(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'${'", "'@{'", null, "'}'", null, null, null, null, null, 
		null, null, null, null, "'.'", "'|'", "','", "'('", "')'", null, null, 
		null, "'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", 
		"'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Identifier", "WhiteSpace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "QuokkaLex.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static QuokkaLex() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '(', '\x10E', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', 
		'\x1A', '\x4', '\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', 
		'\x1D', '\t', '\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', 
		'\x1F', '\x4', ' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', 
		'\"', '\x4', '#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', 
		'%', '\x4', '&', '\t', '&', '\x4', '\'', '\t', '\'', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\a', '\x2', 'V', '\n', 
		'\x2', '\f', '\x2', '\xE', '\x2', 'Y', '\v', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\a', '\x5', 
		'k', '\n', '\x5', '\f', '\x5', '\xE', '\x5', 'n', '\v', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\a', '\x5', 
		'u', '\n', '\x5', '\f', '\x5', '\xE', '\x5', 'x', '\v', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x6', '\x5', '}', '\n', '\x5', '\r', 
		'\x5', '\xE', '\x5', '~', '\x5', '\x5', '\x81', '\n', '\x5', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\b', '\x3', '\b', '\x6', '\b', '\x8C', '\n', '\b', '\r', 
		'\b', '\xE', '\b', '\x8D', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x6', '\v', '\x9D', 
		'\n', '\v', '\r', '\v', '\xE', '\v', '\x9E', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x6', '\xE', '\xAC', '\n', 
		'\xE', '\r', '\xE', '\xE', '\xE', '\xAD', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', 
		'\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', 
		'\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', 
		'\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '\"', '\x6', '\"', 
		'\xE4', '\n', '\"', '\r', '\"', '\xE', '\"', '\xE5', '\x3', '\"', '\x3', 
		'\"', '\x6', '\"', '\xEA', '\n', '\"', '\r', '\"', '\xE', '\"', '\xEB', 
		'\x5', '\"', '\xEE', '\n', '\"', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', 
		'$', '\a', '$', '\xF4', '\n', '$', '\f', '$', '\xE', '$', '\xF7', '\v', 
		'$', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\a', '%', '\xFD', 
		'\n', '%', '\f', '%', '\xE', '%', '\x100', '\v', '%', '\x3', '%', '\x3', 
		'%', '\x3', '&', '\x3', '&', '\a', '&', '\x106', '\n', '&', '\f', '&', 
		'\xE', '&', '\x109', '\v', '&', '\x3', '\'', '\x3', '\'', '\x3', '\'', 
		'\x3', '\'', '\x4', 'l', 'v', '\x2', '(', '\x4', '\x3', '\x6', '\x4', 
		'\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', '\x10', '\t', '\x12', 
		'\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', '\x1A', '\xE', '\x1C', 
		'\xF', '\x1E', '\x10', ' ', '\x11', '\"', '\x12', '$', '\x13', '&', '\x14', 
		'(', '\x15', '*', '\x16', ',', '\x17', '.', '\x18', '\x30', '\x19', '\x32', 
		'\x1A', '\x34', '\x1B', '\x36', '\x1C', '\x38', '\x1D', ':', '\x1E', '<', 
		'\x1F', '>', ' ', '@', '!', '\x42', '\"', '\x44', '#', '\x46', '$', 'H', 
		'%', 'J', '&', 'L', '\'', 'N', '(', '\x4', '\x2', '\x3', '\x16', '\x3', 
		'\x2', '\x7F', '\x7F', '\x4', '\x2', '&', '&', '\x42', '\x42', '\x3', 
		'\x2', '}', '}', '\x4', '\x2', 'K', 'K', 'k', 'k', '\x4', '\x2', 'H', 
		'H', 'h', 'h', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'P', 'P', 
		'p', 'p', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x4', '\x2', 
		'N', 'N', 'n', 'n', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x4', '\x2', 'Q', 
		'Q', 'q', 'q', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'W', 'W', 
		'w', 'w', '\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', 
		'V', 'V', 'v', 'v', '\x3', '\x2', '$', '$', '\x3', '\x2', ')', ')', '\x5', 
		'\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', 
		';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\x2', '\x11C', '\x2', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\n', '\x3', '\x2', '\x2', '\x2', '\x3', '\f', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x10', '\x3', '\x2', '\x2', '\x2', '\x3', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x14', '\x3', '\x2', '\x2', '\x2', '\x3', '\x16', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'(', '\x3', '\x2', '\x2', '\x2', '\x3', '*', '\x3', '\x2', '\x2', '\x2', 
		'\x3', ',', '\x3', '\x2', '\x2', '\x2', '\x3', '.', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x30', '\x3', '\x2', '\x2', '\x2', '\x3', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x34', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x3', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x3', ':', '\x3', '\x2', '\x2', '\x2', '\x3', '<', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '>', '\x3', '\x2', '\x2', '\x2', '\x3', '@', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x42', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x44', '\x3', '\x2', '\x2', '\x2', '\x3', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x3', 'H', '\x3', '\x2', '\x2', '\x2', '\x3', 'J', '\x3', '\x2', 
		'\x2', '\x2', '\x3', 'L', '\x3', '\x2', '\x2', '\x2', '\x3', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\x4', 'P', '\x3', '\x2', '\x2', '\x2', '\x6', ']', 
		'\x3', '\x2', '\x2', '\x2', '\b', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'\n', '\x80', '\x3', '\x2', '\x2', '\x2', '\f', '\x82', '\x3', '\x2', 
		'\x2', '\x2', '\xE', '\x86', '\x3', '\x2', '\x2', '\x2', '\x10', '\x89', 
		'\x3', '\x2', '\x2', '\x2', '\x12', '\x91', '\x3', '\x2', '\x2', '\x2', 
		'\x14', '\x95', '\x3', '\x2', '\x2', '\x2', '\x16', '\x9A', '\x3', '\x2', 
		'\x2', '\x2', '\x18', '\xA2', '\x3', '\x2', '\x2', '\x2', '\x1A', '\xA6', 
		'\x3', '\x2', '\x2', '\x2', '\x1C', '\xA9', '\x3', '\x2', '\x2', '\x2', 
		'\x1E', '\xB1', '\x3', '\x2', '\x2', '\x2', ' ', '\xB6', '\x3', '\x2', 
		'\x2', '\x2', '\"', '\xB8', '\x3', '\x2', '\x2', '\x2', '$', '\xBA', '\x3', 
		'\x2', '\x2', '\x2', '&', '\xBC', '\x3', '\x2', '\x2', '\x2', '(', '\xBE', 
		'\x3', '\x2', '\x2', '\x2', '*', '\xC0', '\x3', '\x2', '\x2', '\x2', ',', 
		'\xC4', '\x3', '\x2', '\x2', '\x2', '.', '\xC7', '\x3', '\x2', '\x2', 
		'\x2', '\x30', '\xCB', '\x3', '\x2', '\x2', '\x2', '\x32', '\xCD', '\x3', 
		'\x2', '\x2', '\x2', '\x34', '\xD0', '\x3', '\x2', '\x2', '\x2', '\x36', 
		'\xD2', '\x3', '\x2', '\x2', '\x2', '\x38', '\xD4', '\x3', '\x2', '\x2', 
		'\x2', ':', '\xD7', '\x3', '\x2', '\x2', '\x2', '<', '\xDA', '\x3', '\x2', 
		'\x2', '\x2', '>', '\xDC', '\x3', '\x2', '\x2', '\x2', '@', '\xDE', '\x3', 
		'\x2', '\x2', '\x2', '\x42', '\xE0', '\x3', '\x2', '\x2', '\x2', '\x44', 
		'\xE3', '\x3', '\x2', '\x2', '\x2', '\x46', '\xEF', '\x3', '\x2', '\x2', 
		'\x2', 'H', '\xF1', '\x3', '\x2', '\x2', '\x2', 'J', '\xFA', '\x3', '\x2', 
		'\x2', '\x2', 'L', '\x103', '\x3', '\x2', '\x2', '\x2', 'N', '\x10A', 
		'\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', '\x42', '\x2', '\x2', 'Q', 
		'R', '\a', '}', '\x2', '\x2', 'R', 'S', '\a', ',', '\x2', '\x2', 'S', 
		'W', '\x3', '\x2', '\x2', '\x2', 'T', 'V', '\n', '\x2', '\x2', '\x2', 
		'U', 'T', '\x3', '\x2', '\x2', '\x2', 'V', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'W', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Z', '\x3', '\x2', '\x2', '\x2', 'Y', 'W', '\x3', '\x2', '\x2', '\x2', 
		'Z', '[', '\a', ',', '\x2', '\x2', '[', '\\', '\a', '\x7F', '\x2', '\x2', 
		'\\', '\x5', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', '&', '\x2', '\x2', 
		'^', '_', '\a', '}', '\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x61', '\b', '\x3', '\x2', '\x2', '\x61', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x63', '\a', '\x42', '\x2', '\x2', '\x63', '\x64', '\a', 
		'}', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x66', '\b', '\x4', '\x2', '\x2', '\x66', '\t', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'h', '\t', '\x3', '\x2', '\x2', 'h', 'l', '\n', '\x4', '\x2', 
		'\x2', 'i', 'k', '\n', '\x3', '\x2', '\x2', 'j', 'i', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'n', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 'm', 'o', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 'o', '\x81', '\a', '\x7F', 
		'\x2', '\x2', 'p', 'q', '\t', '\x3', '\x2', '\x2', 'q', 'r', '\a', '}', 
		'\x2', '\x2', 'r', 'v', '\a', '}', '\x2', '\x2', 's', 'u', '\n', '\x3', 
		'\x2', '\x2', 't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'v', 't', '\x3', '\x2', 
		'\x2', '\x2', 'w', 'y', '\x3', '\x2', '\x2', '\x2', 'x', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'y', '\x81', '\a', '\x7F', '\x2', '\x2', 'z', '\x81', '\t', 
		'\x3', '\x2', '\x2', '{', '}', '\n', '\x3', '\x2', '\x2', '|', '{', '\x3', 
		'\x2', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', '~', '|', '\x3', 
		'\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x7F', 
		'\x81', '\x3', '\x2', '\x2', '\x2', '\x80', 'g', '\x3', '\x2', '\x2', 
		'\x2', '\x80', 'p', '\x3', '\x2', '\x2', '\x2', '\x80', 'z', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '|', '\x3', '\x2', '\x2', '\x2', '\x81', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x83', '\a', '\x7F', '\x2', '\x2', '\x83', 
		'\x84', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\b', '\x6', '\x3', 
		'\x2', '\x85', '\r', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\t', 
		'\x5', '\x2', '\x2', '\x87', '\x88', '\t', '\x6', '\x2', '\x2', '\x88', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8B', '\x5', '\x12', '\t', 
		'\x2', '\x8A', '\x8C', '\x5', 'N', '\'', '\x2', '\x8B', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\x5', 
		'\xE', '\a', '\x2', '\x90', '\x11', '\x3', '\x2', '\x2', '\x2', '\x91', 
		'\x92', '\t', '\a', '\x2', '\x2', '\x92', '\x93', '\t', '\b', '\x2', '\x2', 
		'\x93', '\x94', '\t', '\t', '\x2', '\x2', '\x94', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x95', '\x96', '\t', '\a', '\x2', '\x2', '\x96', '\x97', 
		'\t', '\n', '\x2', '\x2', '\x97', '\x98', '\t', '\v', '\x2', '\x2', '\x98', 
		'\x99', '\t', '\a', '\x2', '\x2', '\x99', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9C', '\x5', '\x14', '\n', '\x2', '\x9B', '\x9D', '\x5', 
		'N', '\'', '\x2', '\x9C', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\x3', 
		'\x2', '\x2', '\x2', '\xA0', '\xA1', '\x5', '\xE', '\a', '\x2', '\xA1', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', '\t', '\x6', '\x2', 
		'\x2', '\xA3', '\xA4', '\t', '\f', '\x2', '\x2', '\xA4', '\xA5', '\t', 
		'\r', '\x2', '\x2', '\xA5', '\x19', '\x3', '\x2', '\x2', '\x2', '\xA6', 
		'\xA7', '\t', '\x5', '\x2', '\x2', '\xA7', '\xA8', '\t', '\b', '\x2', 
		'\x2', '\xA8', '\x1B', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAB', '\x5', 
		'\x12', '\t', '\x2', '\xAA', '\xAC', '\x5', 'N', '\'', '\x2', '\xAB', 
		'\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\x3', '\x2', '\x2', 
		'\x2', '\xAD', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\x3', 
		'\x2', '\x2', '\x2', '\xAE', '\xAF', '\x3', '\x2', '\x2', '\x2', '\xAF', 
		'\xB0', '\x5', '\x18', '\f', '\x2', '\xB0', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xB2', '\t', '\b', '\x2', '\x2', '\xB2', '\xB3', '\t', 
		'\xE', '\x2', '\x2', '\xB3', '\xB4', '\t', '\n', '\x2', '\x2', '\xB4', 
		'\xB5', '\t', '\n', '\x2', '\x2', '\xB5', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\xB6', '\xB7', '\a', '\x30', '\x2', '\x2', '\xB7', '!', '\x3', 
		'\x2', '\x2', '\x2', '\xB8', '\xB9', '\a', '~', '\x2', '\x2', '\xB9', 
		'#', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xBB', '\a', '.', '\x2', '\x2', 
		'\xBB', '%', '\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', '\a', '*', '\x2', 
		'\x2', '\xBD', '\'', '\x3', '\x2', '\x2', '\x2', '\xBE', '\xBF', '\a', 
		'+', '\x2', '\x2', '\xBF', ')', '\x3', '\x2', '\x2', '\x2', '\xC0', '\xC1', 
		'\t', '\xF', '\x2', '\x2', '\xC1', '\xC2', '\t', '\b', '\x2', '\x2', '\xC2', 
		'\xC3', '\t', '\t', '\x2', '\x2', '\xC3', '+', '\x3', '\x2', '\x2', '\x2', 
		'\xC4', '\xC5', '\t', '\f', '\x2', '\x2', '\xC5', '\xC6', '\t', '\r', 
		'\x2', '\x2', '\xC6', '-', '\x3', '\x2', '\x2', '\x2', '\xC7', '\xC8', 
		'\t', '\b', '\x2', '\x2', '\xC8', '\xC9', '\t', '\f', '\x2', '\x2', '\xC9', 
		'\xCA', '\t', '\x10', '\x2', '\x2', '\xCA', '/', '\x3', '\x2', '\x2', 
		'\x2', '\xCB', '\xCC', '\a', '?', '\x2', '\x2', '\xCC', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\xCD', '\xCE', '\a', '#', '\x2', '\x2', '\xCE', 
		'\xCF', '\a', '?', '\x2', '\x2', '\xCF', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\xD0', '\xD1', '\a', '@', '\x2', '\x2', '\xD1', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\xD2', '\xD3', '\a', '>', '\x2', '\x2', '\xD3', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD5', '\a', '@', '\x2', 
		'\x2', '\xD5', '\xD6', '\a', '?', '\x2', '\x2', '\xD6', '\x39', '\x3', 
		'\x2', '\x2', '\x2', '\xD7', '\xD8', '\a', '>', '\x2', '\x2', '\xD8', 
		'\xD9', '\a', '?', '\x2', '\x2', '\xD9', ';', '\x3', '\x2', '\x2', '\x2', 
		'\xDA', '\xDB', '\a', '-', '\x2', '\x2', '\xDB', '=', '\x3', '\x2', '\x2', 
		'\x2', '\xDC', '\xDD', '\a', '/', '\x2', '\x2', '\xDD', '?', '\x3', '\x2', 
		'\x2', '\x2', '\xDE', '\xDF', '\a', ',', '\x2', '\x2', '\xDF', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\xE0', '\xE1', '\a', '\x31', '\x2', '\x2', 
		'\xE1', '\x43', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xE4', '\x5', '\x46', 
		'#', '\x2', '\xE3', '\xE2', '\x3', '\x2', '\x2', '\x2', '\xE4', '\xE5', 
		'\x3', '\x2', '\x2', '\x2', '\xE5', '\xE3', '\x3', '\x2', '\x2', '\x2', 
		'\xE5', '\xE6', '\x3', '\x2', '\x2', '\x2', '\xE6', '\xED', '\x3', '\x2', 
		'\x2', '\x2', '\xE7', '\xE9', '\a', '\x30', '\x2', '\x2', '\xE8', '\xEA', 
		'\x5', '\x46', '#', '\x2', '\xE9', '\xE8', '\x3', '\x2', '\x2', '\x2', 
		'\xEA', '\xEB', '\x3', '\x2', '\x2', '\x2', '\xEB', '\xE9', '\x3', '\x2', 
		'\x2', '\x2', '\xEB', '\xEC', '\x3', '\x2', '\x2', '\x2', '\xEC', '\xEE', 
		'\x3', '\x2', '\x2', '\x2', '\xED', '\xE7', '\x3', '\x2', '\x2', '\x2', 
		'\xED', '\xEE', '\x3', '\x2', '\x2', '\x2', '\xEE', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\xEF', '\xF0', '\x4', '\x32', ';', '\x2', '\xF0', 'G', 
		'\x3', '\x2', '\x2', '\x2', '\xF1', '\xF5', '\a', '$', '\x2', '\x2', '\xF2', 
		'\xF4', '\n', '\x11', '\x2', '\x2', '\xF3', '\xF2', '\x3', '\x2', '\x2', 
		'\x2', '\xF4', '\xF7', '\x3', '\x2', '\x2', '\x2', '\xF5', '\xF3', '\x3', 
		'\x2', '\x2', '\x2', '\xF5', '\xF6', '\x3', '\x2', '\x2', '\x2', '\xF6', 
		'\xF8', '\x3', '\x2', '\x2', '\x2', '\xF7', '\xF5', '\x3', '\x2', '\x2', 
		'\x2', '\xF8', '\xF9', '\a', '$', '\x2', '\x2', '\xF9', 'I', '\x3', '\x2', 
		'\x2', '\x2', '\xFA', '\xFE', '\a', ')', '\x2', '\x2', '\xFB', '\xFD', 
		'\n', '\x12', '\x2', '\x2', '\xFC', '\xFB', '\x3', '\x2', '\x2', '\x2', 
		'\xFD', '\x100', '\x3', '\x2', '\x2', '\x2', '\xFE', '\xFC', '\x3', '\x2', 
		'\x2', '\x2', '\xFE', '\xFF', '\x3', '\x2', '\x2', '\x2', '\xFF', '\x101', 
		'\x3', '\x2', '\x2', '\x2', '\x100', '\xFE', '\x3', '\x2', '\x2', '\x2', 
		'\x101', '\x102', '\a', ')', '\x2', '\x2', '\x102', 'K', '\x3', '\x2', 
		'\x2', '\x2', '\x103', '\x107', '\t', '\x13', '\x2', '\x2', '\x104', '\x106', 
		'\t', '\x14', '\x2', '\x2', '\x105', '\x104', '\x3', '\x2', '\x2', '\x2', 
		'\x106', '\x109', '\x3', '\x2', '\x2', '\x2', '\x107', '\x105', '\x3', 
		'\x2', '\x2', '\x2', '\x107', '\x108', '\x3', '\x2', '\x2', '\x2', '\x108', 
		'M', '\x3', '\x2', '\x2', '\x2', '\x109', '\x107', '\x3', '\x2', '\x2', 
		'\x2', '\x10A', '\x10B', '\t', '\x15', '\x2', '\x2', '\x10B', '\x10C', 
		'\x3', '\x2', '\x2', '\x2', '\x10C', '\x10D', '\b', '\'', '\x4', '\x2', 
		'\x10D', 'O', '\x3', '\x2', '\x2', '\x2', '\x12', '\x2', '\x3', 'W', 'l', 
		'v', '~', '\x80', '\x8D', '\x9E', '\xAD', '\xE5', '\xEB', '\xED', '\xF5', 
		'\xFE', '\x107', '\x5', '\a', '\x3', '\x2', '\x6', '\x2', '\x2', '\b', 
		'\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Quokka.Generated
