//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\code\Quokka\Grammar\Quokka\QuokkaLex.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Quokka.Generated {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
internal partial class QuokkaLex : Lexer {
	public const int
		SingleInstructionComment=1, OutputInstructionStart=2, ControlInstructionStart=3, 
		Fluff=4, InstructionEnd=5, If=6, EndIf=7, End=8, Else=9, ElseIf=10, For=11, 
		In=12, EndFor=13, MemberAccessOperator=14, Pipe=15, CommaSeparator=16, 
		LeftParen=17, RightParen=18, And=19, Or=20, Not=21, Equals=22, NotEquals=23, 
		GreaterThan=24, LessThan=25, GreaterThanOrEquals=26, LessThanOrEquals=27, 
		Plus=28, Minus=29, Multiply=30, Divide=31, Number=32, Digit=33, DoubleQuotedString=34, 
		Identifier=35, WhiteSpace=36;
	public const int Instruction = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "Instruction"
	};

	public static readonly string[] ruleNames = {
		"SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "MemberAccessOperator", "Pipe", "CommaSeparator", "LeftParen", 
		"RightParen", "And", "Or", "Not", "Equals", "NotEquals", "GreaterThan", 
		"LessThan", "GreaterThanOrEquals", "LessThanOrEquals", "Plus", "Minus", 
		"Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", "Identifier", 
		"WhiteSpace"
	};


	public QuokkaLex(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'${'", "'@{'", null, "'}'", null, null, null, null, null, 
		null, null, null, "'.'", "'|'", "','", "'('", "')'", null, null, null, 
		"'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "MemberAccessOperator", "Pipe", "CommaSeparator", "LeftParen", 
		"RightParen", "And", "Or", "Not", "Equals", "NotEquals", "GreaterThan", 
		"LessThan", "GreaterThanOrEquals", "LessThanOrEquals", "Plus", "Minus", 
		"Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", "Identifier", 
		"WhiteSpace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "QuokkaLex.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2&\xF4\b\x1\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\a\x2R\n\x2\f\x2\xE\x2U\v\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\a\x5g\n\x5\f\x5"+
		"\xE\x5j\v\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\a\x5q\n\x5\f\x5\xE\x5t\v\x5"+
		"\x3\x5\x3\x5\x3\x5\x6\x5y\n\x5\r\x5\xE\x5z\x5\x5}\n\x5\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x6\b\x88\n\b\r\b\xE\b\x89\x3\b\x3\b"+
		"\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x6\v\x99\n\v\r"+
		"\v\xE\v\x9A\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x6"+
		"\xE\xA8\n\xE\r\xE\xE\xE\xA9\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x6!\xDB"+
		"\n!\r!\xE!\xDC\x3\"\x3\"\x3#\x3#\a#\xE3\n#\f#\xE#\xE6\v#\x3#\x3#\x3$\x3"+
		"$\a$\xEC\n$\f$\xE$\xEF\v$\x3%\x3%\x3%\x3%\x4hr\x2&\x4\x3\x6\x4\b\x5\n"+
		"\x6\f\a\xE\b\x10\t\x12\n\x14\v\x16\f\x18\r\x1A\xE\x1C\xF\x1E\x10 \x11"+
		"\"\x12$\x13&\x14(\x15*\x16,\x17.\x18\x30\x19\x32\x1A\x34\x1B\x36\x1C\x38"+
		"\x1D:\x1E<\x1F> @!\x42\"\x44#\x46$H%J&\x4\x2\x3\x14\x3\x2\x7F\x7F\x4\x2"+
		"&&\x42\x42\x3\x2}}\x4\x2KKkk\x4\x2HHhh\x4\x2GGgg\x4\x2PPpp\x4\x2\x46\x46"+
		"\x66\x66\x4\x2NNnn\x4\x2UUuu\x4\x2QQqq\x4\x2TTtt\x4\x2\x43\x43\x63\x63"+
		"\x4\x2VVvv\x3\x2$$\x4\x2\x43\\\x63|\x5\x2\x32;\x43\\\x63|\x5\x2\v\f\xF"+
		"\xF\"\"\xFF\x2\x4\x3\x2\x2\x2\x2\x6\x3\x2\x2\x2\x2\b\x3\x2\x2\x2\x2\n"+
		"\x3\x2\x2\x2\x3\f\x3\x2\x2\x2\x3\xE\x3\x2\x2\x2\x3\x10\x3\x2\x2\x2\x3"+
		"\x12\x3\x2\x2\x2\x3\x14\x3\x2\x2\x2\x3\x16\x3\x2\x2\x2\x3\x18\x3\x2\x2"+
		"\x2\x3\x1A\x3\x2\x2\x2\x3\x1C\x3\x2\x2\x2\x3\x1E\x3\x2\x2\x2\x3 \x3\x2"+
		"\x2\x2\x3\"\x3\x2\x2\x2\x3$\x3\x2\x2\x2\x3&\x3\x2\x2\x2\x3(\x3\x2\x2\x2"+
		"\x3*\x3\x2\x2\x2\x3,\x3\x2\x2\x2\x3.\x3\x2\x2\x2\x3\x30\x3\x2\x2\x2\x3"+
		"\x32\x3\x2\x2\x2\x3\x34\x3\x2\x2\x2\x3\x36\x3\x2\x2\x2\x3\x38\x3\x2\x2"+
		"\x2\x3:\x3\x2\x2\x2\x3<\x3\x2\x2\x2\x3>\x3\x2\x2\x2\x3@\x3\x2\x2\x2\x3"+
		"\x42\x3\x2\x2\x2\x3\x44\x3\x2\x2\x2\x3\x46\x3\x2\x2\x2\x3H\x3\x2\x2\x2"+
		"\x3J\x3\x2\x2\x2\x4L\x3\x2\x2\x2\x6Y\x3\x2\x2\x2\b^\x3\x2\x2\x2\n|\x3"+
		"\x2\x2\x2\f~\x3\x2\x2\x2\xE\x82\x3\x2\x2\x2\x10\x85\x3\x2\x2\x2\x12\x8D"+
		"\x3\x2\x2\x2\x14\x91\x3\x2\x2\x2\x16\x96\x3\x2\x2\x2\x18\x9E\x3\x2\x2"+
		"\x2\x1A\xA2\x3\x2\x2\x2\x1C\xA5\x3\x2\x2\x2\x1E\xAD\x3\x2\x2\x2 \xAF\x3"+
		"\x2\x2\x2\"\xB1\x3\x2\x2\x2$\xB3\x3\x2\x2\x2&\xB5\x3\x2\x2\x2(\xB7\x3"+
		"\x2\x2\x2*\xBB\x3\x2\x2\x2,\xBE\x3\x2\x2\x2.\xC2\x3\x2\x2\x2\x30\xC4\x3"+
		"\x2\x2\x2\x32\xC7\x3\x2\x2\x2\x34\xC9\x3\x2\x2\x2\x36\xCB\x3\x2\x2\x2"+
		"\x38\xCE\x3\x2\x2\x2:\xD1\x3\x2\x2\x2<\xD3\x3\x2\x2\x2>\xD5\x3\x2\x2\x2"+
		"@\xD7\x3\x2\x2\x2\x42\xDA\x3\x2\x2\x2\x44\xDE\x3\x2\x2\x2\x46\xE0\x3\x2"+
		"\x2\x2H\xE9\x3\x2\x2\x2J\xF0\x3\x2\x2\x2LM\a\x42\x2\x2MN\a}\x2\x2NO\a"+
		",\x2\x2OS\x3\x2\x2\x2PR\n\x2\x2\x2QP\x3\x2\x2\x2RU\x3\x2\x2\x2SQ\x3\x2"+
		"\x2\x2ST\x3\x2\x2\x2TV\x3\x2\x2\x2US\x3\x2\x2\x2VW\a,\x2\x2WX\a\x7F\x2"+
		"\x2X\x5\x3\x2\x2\x2YZ\a&\x2\x2Z[\a}\x2\x2[\\\x3\x2\x2\x2\\]\b\x3\x2\x2"+
		"]\a\x3\x2\x2\x2^_\a\x42\x2\x2_`\a}\x2\x2`\x61\x3\x2\x2\x2\x61\x62\b\x4"+
		"\x2\x2\x62\t\x3\x2\x2\x2\x63\x64\t\x3\x2\x2\x64h\n\x4\x2\x2\x65g\n\x3"+
		"\x2\x2\x66\x65\x3\x2\x2\x2gj\x3\x2\x2\x2hi\x3\x2\x2\x2h\x66\x3\x2\x2\x2"+
		"ik\x3\x2\x2\x2jh\x3\x2\x2\x2k}\a\x7F\x2\x2lm\t\x3\x2\x2mn\a}\x2\x2nr\a"+
		"}\x2\x2oq\n\x3\x2\x2po\x3\x2\x2\x2qt\x3\x2\x2\x2rs\x3\x2\x2\x2rp\x3\x2"+
		"\x2\x2su\x3\x2\x2\x2tr\x3\x2\x2\x2u}\a\x7F\x2\x2v}\t\x3\x2\x2wy\n\x3\x2"+
		"\x2xw\x3\x2\x2\x2yz\x3\x2\x2\x2zx\x3\x2\x2\x2z{\x3\x2\x2\x2{}\x3\x2\x2"+
		"\x2|\x63\x3\x2\x2\x2|l\x3\x2\x2\x2|v\x3\x2\x2\x2|x\x3\x2\x2\x2}\v\x3\x2"+
		"\x2\x2~\x7F\a\x7F\x2\x2\x7F\x80\x3\x2\x2\x2\x80\x81\b\x6\x3\x2\x81\r\x3"+
		"\x2\x2\x2\x82\x83\t\x5\x2\x2\x83\x84\t\x6\x2\x2\x84\xF\x3\x2\x2\x2\x85"+
		"\x87\x5\x12\t\x2\x86\x88\x5J%\x2\x87\x86\x3\x2\x2\x2\x88\x89\x3\x2\x2"+
		"\x2\x89\x87\x3\x2\x2\x2\x89\x8A\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x8C"+
		"\x5\xE\a\x2\x8C\x11\x3\x2\x2\x2\x8D\x8E\t\a\x2\x2\x8E\x8F\t\b\x2\x2\x8F"+
		"\x90\t\t\x2\x2\x90\x13\x3\x2\x2\x2\x91\x92\t\a\x2\x2\x92\x93\t\n\x2\x2"+
		"\x93\x94\t\v\x2\x2\x94\x95\t\a\x2\x2\x95\x15\x3\x2\x2\x2\x96\x98\x5\x14"+
		"\n\x2\x97\x99\x5J%\x2\x98\x97\x3\x2\x2\x2\x99\x9A\x3\x2\x2\x2\x9A\x98"+
		"\x3\x2\x2\x2\x9A\x9B\x3\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x9D\x5\xE\a\x2"+
		"\x9D\x17\x3\x2\x2\x2\x9E\x9F\t\x6\x2\x2\x9F\xA0\t\f\x2\x2\xA0\xA1\t\r"+
		"\x2\x2\xA1\x19\x3\x2\x2\x2\xA2\xA3\t\x5\x2\x2\xA3\xA4\t\b\x2\x2\xA4\x1B"+
		"\x3\x2\x2\x2\xA5\xA7\x5\x12\t\x2\xA6\xA8\x5J%\x2\xA7\xA6\x3\x2\x2\x2\xA8"+
		"\xA9\x3\x2\x2\x2\xA9\xA7\x3\x2\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA\xAB\x3\x2"+
		"\x2\x2\xAB\xAC\x5\x18\f\x2\xAC\x1D\x3\x2\x2\x2\xAD\xAE\a\x30\x2\x2\xAE"+
		"\x1F\x3\x2\x2\x2\xAF\xB0\a~\x2\x2\xB0!\x3\x2\x2\x2\xB1\xB2\a.\x2\x2\xB2"+
		"#\x3\x2\x2\x2\xB3\xB4\a*\x2\x2\xB4%\x3\x2\x2\x2\xB5\xB6\a+\x2\x2\xB6\'"+
		"\x3\x2\x2\x2\xB7\xB8\t\xE\x2\x2\xB8\xB9\t\b\x2\x2\xB9\xBA\t\t\x2\x2\xBA"+
		")\x3\x2\x2\x2\xBB\xBC\t\f\x2\x2\xBC\xBD\t\r\x2\x2\xBD+\x3\x2\x2\x2\xBE"+
		"\xBF\t\b\x2\x2\xBF\xC0\t\f\x2\x2\xC0\xC1\t\xF\x2\x2\xC1-\x3\x2\x2\x2\xC2"+
		"\xC3\a?\x2\x2\xC3/\x3\x2\x2\x2\xC4\xC5\a#\x2\x2\xC5\xC6\a?\x2\x2\xC6\x31"+
		"\x3\x2\x2\x2\xC7\xC8\a@\x2\x2\xC8\x33\x3\x2\x2\x2\xC9\xCA\a>\x2\x2\xCA"+
		"\x35\x3\x2\x2\x2\xCB\xCC\a@\x2\x2\xCC\xCD\a?\x2\x2\xCD\x37\x3\x2\x2\x2"+
		"\xCE\xCF\a>\x2\x2\xCF\xD0\a?\x2\x2\xD0\x39\x3\x2\x2\x2\xD1\xD2\a-\x2\x2"+
		"\xD2;\x3\x2\x2\x2\xD3\xD4\a/\x2\x2\xD4=\x3\x2\x2\x2\xD5\xD6\a,\x2\x2\xD6"+
		"?\x3\x2\x2\x2\xD7\xD8\a\x31\x2\x2\xD8\x41\x3\x2\x2\x2\xD9\xDB\x5\x44\""+
		"\x2\xDA\xD9\x3\x2\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\xDA\x3\x2\x2\x2\xDC\xDD"+
		"\x3\x2\x2\x2\xDD\x43\x3\x2\x2\x2\xDE\xDF\x4\x32;\x2\xDF\x45\x3\x2\x2\x2"+
		"\xE0\xE4\a$\x2\x2\xE1\xE3\n\x10\x2\x2\xE2\xE1\x3\x2\x2\x2\xE3\xE6\x3\x2"+
		"\x2\x2\xE4\xE2\x3\x2\x2\x2\xE4\xE5\x3\x2\x2\x2\xE5\xE7\x3\x2\x2\x2\xE6"+
		"\xE4\x3\x2\x2\x2\xE7\xE8\a$\x2\x2\xE8G\x3\x2\x2\x2\xE9\xED\t\x11\x2\x2"+
		"\xEA\xEC\t\x12\x2\x2\xEB\xEA\x3\x2\x2\x2\xEC\xEF\x3\x2\x2\x2\xED\xEB\x3"+
		"\x2\x2\x2\xED\xEE\x3\x2\x2\x2\xEEI\x3\x2\x2\x2\xEF\xED\x3\x2\x2\x2\xF0"+
		"\xF1\t\x13\x2\x2\xF1\xF2\x3\x2\x2\x2\xF2\xF3\b%\x4\x2\xF3K\x3\x2\x2\x2"+
		"\xF\x2\x3Shrz|\x89\x9A\xA9\xDC\xE4\xED\x5\a\x3\x2\x6\x2\x2\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Quokka.Generated
