// // Copyright 2022 Mindbox Ltd
// //
// // Licensed under the Apache License, Version 2.0 (the "License");
// // you may not use this file except in compliance with the License.
// // You may obtain a copy of the License at
// //
// //     http://www.apache.org/licenses/LICENSE-2.0
// //
// // Unless required by applicable law or agreed to in writing, software
// // distributed under the License is distributed on an "AS IS" BASIS,
// // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// // See the License for the specific language governing permissions and
// // limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar\Quokka\QuokkaLex.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Mindbox.Quokka.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
internal partial class QuokkaLex : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SingleInstructionComment=1, OutputInstructionStart=2, ControlInstructionStart=3, 
		Fluff=4, InstructionEnd=5, If=6, EndIf=7, End=8, Else=9, ElseIf=10, For=11, 
		In=12, EndFor=13, Null=14, MemberAccessOperator=15, Pipe=16, CommaSeparator=17, 
		LeftParen=18, RightParen=19, And=20, Or=21, Not=22, Set=23, Equals=24, 
		NotEquals=25, GreaterThan=26, LessThan=27, GreaterThanOrEquals=28, LessThanOrEquals=29, 
		Plus=30, Minus=31, Multiply=32, Divide=33, Number=34, Digit=35, DoubleQuotedString=36, 
		SingleQuotedString=37, Ampersand=38, Identifier=39, WhiteSpace=40;
	public const int
		Instruction=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "Instruction"
	};

	public static readonly string[] ruleNames = {
		"SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Set", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Ampersand", "Identifier", "WhiteSpace"
	};


	public QuokkaLex(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public QuokkaLex(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'${'", "'@{'", null, "'}'", null, null, null, null, null, 
		null, null, null, null, "'.'", "'|'", "','", "'('", "')'", null, null, 
		null, null, "'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", 
		"'*'", "'/'", null, null, null, null, "'&'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Set", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Ampersand", "Identifier", "WhiteSpace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "QuokkaLex.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static QuokkaLex() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '*', '\x105', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', 
		'\x1A', '\x4', '\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', 
		'\x1D', '\t', '\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', 
		'\x1F', '\x4', ' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', 
		'\"', '\x4', '#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', 
		'%', '\x4', '&', '\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', 
		'(', '\x4', ')', '\t', ')', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x2', '\x3', '\x2', '\a', '\x2', 'Z', '\n', '\x2', '\f', '\x2', 
		'\xE', '\x2', ']', '\v', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x5', '\x6', '\x5', 'm', '\n', '\x5', '\r', '\x5', '\xE', '\x5', 
		'n', '\x3', '\x5', '\x5', '\x5', 'r', '\n', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x6', '\b', '}', '\n', '\b', '\r', '\b', '\xE', 
		'\b', '~', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x6', '\v', '\x8E', '\n', '\v', 
		'\r', '\v', '\xE', '\v', '\x8F', '\x3', '\v', '\x3', '\v', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x6', '\xE', '\x9D', '\n', '\xE', '\r', 
		'\xE', '\xE', '\xE', '\x9E', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', 
		'\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x6', '#', '\xD9', '\n', '#', '\r', '#', 
		'\xE', '#', '\xDA', '\x3', '#', '\x3', '#', '\x6', '#', '\xDF', '\n', 
		'#', '\r', '#', '\xE', '#', '\xE0', '\x5', '#', '\xE3', '\n', '#', '\x3', 
		'$', '\x3', '$', '\x3', '%', '\x3', '%', '\a', '%', '\xE9', '\n', '%', 
		'\f', '%', '\xE', '%', '\xEC', '\v', '%', '\x3', '%', '\x3', '%', '\x3', 
		'&', '\x3', '&', '\a', '&', '\xF2', '\n', '&', '\f', '&', '\xE', '&', 
		'\xF5', '\v', '&', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x3', '(', '\a', '(', '\xFD', '\n', '(', '\f', '(', '\xE', '(', 
		'\x100', '\v', '(', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', ')', '\x2', 
		'\x2', '*', '\x4', '\x3', '\x6', '\x4', '\b', '\x5', '\n', '\x6', '\f', 
		'\a', '\xE', '\b', '\x10', '\t', '\x12', '\n', '\x14', '\v', '\x16', '\f', 
		'\x18', '\r', '\x1A', '\xE', '\x1C', '\xF', '\x1E', '\x10', ' ', '\x11', 
		'\"', '\x12', '$', '\x13', '&', '\x14', '(', '\x15', '*', '\x16', ',', 
		'\x17', '.', '\x18', '\x30', '\x19', '\x32', '\x1A', '\x34', '\x1B', '\x36', 
		'\x1C', '\x38', '\x1D', ':', '\x1E', '<', '\x1F', '>', ' ', '@', '!', 
		'\x42', '\"', '\x44', '#', '\x46', '$', 'H', '%', 'J', '&', 'L', '\'', 
		'N', '(', 'P', ')', 'R', '*', '\x4', '\x2', '\x3', '\x15', '\x3', '\x2', 
		'\x7F', '\x7F', '\x4', '\x2', '&', '&', '\x42', '\x42', '\x4', '\x2', 
		'K', 'K', 'k', 'k', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', 'G', 
		'G', 'g', 'g', '\x4', '\x2', 'P', 'P', 'p', 'p', '\x4', '\x2', '\x46', 
		'\x46', '\x66', '\x66', '\x4', '\x2', 'N', 'N', 'n', 'n', '\x4', '\x2', 
		'U', 'U', 'u', 'u', '\x4', '\x2', 'Q', 'Q', 'q', 'q', '\x4', '\x2', 'T', 
		'T', 't', 't', '\x4', '\x2', 'W', 'W', 'w', 'w', '\x4', '\x2', '\x43', 
		'\x43', '\x63', '\x63', '\x4', '\x2', 'V', 'V', 'v', 'v', '\x3', '\x2', 
		'$', '$', '\x3', '\x2', ')', ')', '\x5', '\x2', '\x43', '\\', '\x61', 
		'\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', 
		'\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', 
		'\x2', '\x10F', '\x2', '\x4', '\x3', '\x2', '\x2', '\x2', '\x2', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x3', '\f', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\xE', '\x3', '\x2', '\x2', '\x2', '\x3', '\x10', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x12', '\x3', '\x2', '\x2', '\x2', '\x3', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x18', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', '(', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '*', '\x3', '\x2', '\x2', '\x2', '\x3', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '.', '\x3', '\x2', '\x2', '\x2', '\x3', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x32', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\x3', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x38', '\x3', '\x2', '\x2', '\x2', '\x3', ':', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '<', '\x3', '\x2', '\x2', '\x2', '\x3', '>', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '@', '\x3', '\x2', '\x2', '\x2', '\x3', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '\x44', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x46', '\x3', '\x2', '\x2', '\x2', '\x3', 'H', '\x3', '\x2', '\x2', 
		'\x2', '\x3', 'J', '\x3', '\x2', '\x2', '\x2', '\x3', 'L', '\x3', '\x2', 
		'\x2', '\x2', '\x3', 'N', '\x3', '\x2', '\x2', '\x2', '\x3', 'P', '\x3', 
		'\x2', '\x2', '\x2', '\x3', 'R', '\x3', '\x2', '\x2', '\x2', '\x4', 'T', 
		'\x3', '\x2', '\x2', '\x2', '\x6', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'\b', '\x66', '\x3', '\x2', '\x2', '\x2', '\n', 'q', '\x3', '\x2', '\x2', 
		'\x2', '\f', 's', '\x3', '\x2', '\x2', '\x2', '\xE', 'w', '\x3', '\x2', 
		'\x2', '\x2', '\x10', 'z', '\x3', '\x2', '\x2', '\x2', '\x12', '\x82', 
		'\x3', '\x2', '\x2', '\x2', '\x14', '\x86', '\x3', '\x2', '\x2', '\x2', 
		'\x16', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x18', '\x93', '\x3', '\x2', 
		'\x2', '\x2', '\x1A', '\x97', '\x3', '\x2', '\x2', '\x2', '\x1C', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '\x1E', '\xA2', '\x3', '\x2', '\x2', '\x2', 
		' ', '\xA7', '\x3', '\x2', '\x2', '\x2', '\"', '\xA9', '\x3', '\x2', '\x2', 
		'\x2', '$', '\xAB', '\x3', '\x2', '\x2', '\x2', '&', '\xAD', '\x3', '\x2', 
		'\x2', '\x2', '(', '\xAF', '\x3', '\x2', '\x2', '\x2', '*', '\xB1', '\x3', 
		'\x2', '\x2', '\x2', ',', '\xB5', '\x3', '\x2', '\x2', '\x2', '.', '\xB8', 
		'\x3', '\x2', '\x2', '\x2', '\x30', '\xBC', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\xC0', '\x3', '\x2', '\x2', '\x2', '\x34', '\xC2', '\x3', '\x2', 
		'\x2', '\x2', '\x36', '\xC5', '\x3', '\x2', '\x2', '\x2', '\x38', '\xC7', 
		'\x3', '\x2', '\x2', '\x2', ':', '\xC9', '\x3', '\x2', '\x2', '\x2', '<', 
		'\xCC', '\x3', '\x2', '\x2', '\x2', '>', '\xCF', '\x3', '\x2', '\x2', 
		'\x2', '@', '\xD1', '\x3', '\x2', '\x2', '\x2', '\x42', '\xD3', '\x3', 
		'\x2', '\x2', '\x2', '\x44', '\xD5', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'\xD8', '\x3', '\x2', '\x2', '\x2', 'H', '\xE4', '\x3', '\x2', '\x2', 
		'\x2', 'J', '\xE6', '\x3', '\x2', '\x2', '\x2', 'L', '\xEF', '\x3', '\x2', 
		'\x2', '\x2', 'N', '\xF8', '\x3', '\x2', '\x2', '\x2', 'P', '\xFA', '\x3', 
		'\x2', '\x2', '\x2', 'R', '\x101', '\x3', '\x2', '\x2', '\x2', 'T', 'U', 
		'\a', '\x42', '\x2', '\x2', 'U', 'V', '\a', '}', '\x2', '\x2', 'V', 'W', 
		'\a', ',', '\x2', '\x2', 'W', '[', '\x3', '\x2', '\x2', '\x2', 'X', 'Z', 
		'\n', '\x2', '\x2', '\x2', 'Y', 'X', '\x3', '\x2', '\x2', '\x2', 'Z', 
		']', '\x3', '\x2', '\x2', '\x2', '[', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'[', '\\', '\x3', '\x2', '\x2', '\x2', '\\', '^', '\x3', '\x2', '\x2', 
		'\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', ',', '\x2', 
		'\x2', '_', '`', '\a', '\x7F', '\x2', '\x2', '`', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '\x62', '\a', '&', '\x2', '\x2', '\x62', '\x63', 
		'\a', '}', '\x2', '\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', '\x64', 
		'\x65', '\b', '\x3', '\x2', '\x2', '\x65', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x66', 'g', '\a', '\x42', '\x2', '\x2', 'g', 'h', '\a', '}', '\x2', 
		'\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\b', '\x4', '\x2', 
		'\x2', 'j', '\t', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\n', '\x3', '\x2', 
		'\x2', 'l', 'k', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'r', '\x3', '\x2', '\x2', '\x2', 'p', 'r', '\t', '\x3', '\x2', 
		'\x2', 'q', 'l', '\x3', '\x2', '\x2', '\x2', 'q', 'p', '\x3', '\x2', '\x2', 
		'\x2', 'r', '\v', '\x3', '\x2', '\x2', '\x2', 's', 't', '\a', '\x7F', 
		'\x2', '\x2', 't', 'u', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\b', '\x6', 
		'\x3', '\x2', 'v', '\r', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\t', '\x4', 
		'\x2', '\x2', 'x', 'y', '\t', '\x5', '\x2', '\x2', 'y', '\xF', '\x3', 
		'\x2', '\x2', '\x2', 'z', '|', '\x5', '\x12', '\t', '\x2', '{', '}', '\x5', 
		'R', ')', '\x2', '|', '{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', 
		'\x2', '\x2', '\x2', '~', '|', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', '\x2', '\x2', 
		'\x80', '\x81', '\x5', '\xE', '\a', '\x2', '\x81', '\x11', '\x3', '\x2', 
		'\x2', '\x2', '\x82', '\x83', '\t', '\x6', '\x2', '\x2', '\x83', '\x84', 
		'\t', '\a', '\x2', '\x2', '\x84', '\x85', '\t', '\b', '\x2', '\x2', '\x85', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\t', '\x6', '\x2', 
		'\x2', '\x87', '\x88', '\t', '\t', '\x2', '\x2', '\x88', '\x89', '\t', 
		'\n', '\x2', '\x2', '\x89', '\x8A', '\t', '\x6', '\x2', '\x2', '\x8A', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8D', '\x5', '\x14', '\n', 
		'\x2', '\x8C', '\x8E', '\x5', 'R', ')', '\x2', '\x8D', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x8D', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x90', '\x91', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', '\x5', 
		'\xE', '\a', '\x2', '\x92', '\x17', '\x3', '\x2', '\x2', '\x2', '\x93', 
		'\x94', '\t', '\x5', '\x2', '\x2', '\x94', '\x95', '\t', '\v', '\x2', 
		'\x2', '\x95', '\x96', '\t', '\f', '\x2', '\x2', '\x96', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x98', '\t', '\x4', '\x2', '\x2', '\x98', 
		'\x99', '\t', '\a', '\x2', '\x2', '\x99', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9C', '\x5', '\x12', '\t', '\x2', '\x9B', '\x9D', '\x5', 
		'R', ')', '\x2', '\x9C', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', 
		'\x3', '\x2', '\x2', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', 
		'\x9E', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\x3', '\x2', 
		'\x2', '\x2', '\xA0', '\xA1', '\x5', '\x18', '\f', '\x2', '\xA1', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', '\t', '\a', '\x2', '\x2', 
		'\xA3', '\xA4', '\t', '\r', '\x2', '\x2', '\xA4', '\xA5', '\t', '\t', 
		'\x2', '\x2', '\xA5', '\xA6', '\t', '\t', '\x2', '\x2', '\xA6', '\x1F', 
		'\x3', '\x2', '\x2', '\x2', '\xA7', '\xA8', '\a', '\x30', '\x2', '\x2', 
		'\xA8', '!', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', '\a', '~', '\x2', 
		'\x2', '\xAA', '#', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\a', 
		'.', '\x2', '\x2', '\xAC', '%', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', 
		'\a', '*', '\x2', '\x2', '\xAE', '\'', '\x3', '\x2', '\x2', '\x2', '\xAF', 
		'\xB0', '\a', '+', '\x2', '\x2', '\xB0', ')', '\x3', '\x2', '\x2', '\x2', 
		'\xB1', '\xB2', '\t', '\xE', '\x2', '\x2', '\xB2', '\xB3', '\t', '\a', 
		'\x2', '\x2', '\xB3', '\xB4', '\t', '\b', '\x2', '\x2', '\xB4', '+', '\x3', 
		'\x2', '\x2', '\x2', '\xB5', '\xB6', '\t', '\v', '\x2', '\x2', '\xB6', 
		'\xB7', '\t', '\f', '\x2', '\x2', '\xB7', '-', '\x3', '\x2', '\x2', '\x2', 
		'\xB8', '\xB9', '\t', '\a', '\x2', '\x2', '\xB9', '\xBA', '\t', '\v', 
		'\x2', '\x2', '\xBA', '\xBB', '\t', '\xF', '\x2', '\x2', '\xBB', '/', 
		'\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', '\t', '\n', '\x2', '\x2', 
		'\xBD', '\xBE', '\t', '\x6', '\x2', '\x2', '\xBE', '\xBF', '\t', '\xF', 
		'\x2', '\x2', '\xBF', '\x31', '\x3', '\x2', '\x2', '\x2', '\xC0', '\xC1', 
		'\a', '?', '\x2', '\x2', '\xC1', '\x33', '\x3', '\x2', '\x2', '\x2', '\xC2', 
		'\xC3', '\a', '#', '\x2', '\x2', '\xC3', '\xC4', '\a', '?', '\x2', '\x2', 
		'\xC4', '\x35', '\x3', '\x2', '\x2', '\x2', '\xC5', '\xC6', '\a', '@', 
		'\x2', '\x2', '\xC6', '\x37', '\x3', '\x2', '\x2', '\x2', '\xC7', '\xC8', 
		'\a', '>', '\x2', '\x2', '\xC8', '\x39', '\x3', '\x2', '\x2', '\x2', '\xC9', 
		'\xCA', '\a', '@', '\x2', '\x2', '\xCA', '\xCB', '\a', '?', '\x2', '\x2', 
		'\xCB', ';', '\x3', '\x2', '\x2', '\x2', '\xCC', '\xCD', '\a', '>', '\x2', 
		'\x2', '\xCD', '\xCE', '\a', '?', '\x2', '\x2', '\xCE', '=', '\x3', '\x2', 
		'\x2', '\x2', '\xCF', '\xD0', '\a', '-', '\x2', '\x2', '\xD0', '?', '\x3', 
		'\x2', '\x2', '\x2', '\xD1', '\xD2', '\a', '/', '\x2', '\x2', '\xD2', 
		'\x41', '\x3', '\x2', '\x2', '\x2', '\xD3', '\xD4', '\a', ',', '\x2', 
		'\x2', '\xD4', '\x43', '\x3', '\x2', '\x2', '\x2', '\xD5', '\xD6', '\a', 
		'\x31', '\x2', '\x2', '\xD6', '\x45', '\x3', '\x2', '\x2', '\x2', '\xD7', 
		'\xD9', '\x5', 'H', '$', '\x2', '\xD8', '\xD7', '\x3', '\x2', '\x2', '\x2', 
		'\xD9', '\xDA', '\x3', '\x2', '\x2', '\x2', '\xDA', '\xD8', '\x3', '\x2', 
		'\x2', '\x2', '\xDA', '\xDB', '\x3', '\x2', '\x2', '\x2', '\xDB', '\xE2', 
		'\x3', '\x2', '\x2', '\x2', '\xDC', '\xDE', '\a', '\x30', '\x2', '\x2', 
		'\xDD', '\xDF', '\x5', 'H', '$', '\x2', '\xDE', '\xDD', '\x3', '\x2', 
		'\x2', '\x2', '\xDF', '\xE0', '\x3', '\x2', '\x2', '\x2', '\xE0', '\xDE', 
		'\x3', '\x2', '\x2', '\x2', '\xE0', '\xE1', '\x3', '\x2', '\x2', '\x2', 
		'\xE1', '\xE3', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xDC', '\x3', '\x2', 
		'\x2', '\x2', '\xE2', '\xE3', '\x3', '\x2', '\x2', '\x2', '\xE3', 'G', 
		'\x3', '\x2', '\x2', '\x2', '\xE4', '\xE5', '\x4', '\x32', ';', '\x2', 
		'\xE5', 'I', '\x3', '\x2', '\x2', '\x2', '\xE6', '\xEA', '\a', '$', '\x2', 
		'\x2', '\xE7', '\xE9', '\n', '\x10', '\x2', '\x2', '\xE8', '\xE7', '\x3', 
		'\x2', '\x2', '\x2', '\xE9', '\xEC', '\x3', '\x2', '\x2', '\x2', '\xEA', 
		'\xE8', '\x3', '\x2', '\x2', '\x2', '\xEA', '\xEB', '\x3', '\x2', '\x2', 
		'\x2', '\xEB', '\xED', '\x3', '\x2', '\x2', '\x2', '\xEC', '\xEA', '\x3', 
		'\x2', '\x2', '\x2', '\xED', '\xEE', '\a', '$', '\x2', '\x2', '\xEE', 
		'K', '\x3', '\x2', '\x2', '\x2', '\xEF', '\xF3', '\a', ')', '\x2', '\x2', 
		'\xF0', '\xF2', '\n', '\x11', '\x2', '\x2', '\xF1', '\xF0', '\x3', '\x2', 
		'\x2', '\x2', '\xF2', '\xF5', '\x3', '\x2', '\x2', '\x2', '\xF3', '\xF1', 
		'\x3', '\x2', '\x2', '\x2', '\xF3', '\xF4', '\x3', '\x2', '\x2', '\x2', 
		'\xF4', '\xF6', '\x3', '\x2', '\x2', '\x2', '\xF5', '\xF3', '\x3', '\x2', 
		'\x2', '\x2', '\xF6', '\xF7', '\a', ')', '\x2', '\x2', '\xF7', 'M', '\x3', 
		'\x2', '\x2', '\x2', '\xF8', '\xF9', '\a', '(', '\x2', '\x2', '\xF9', 
		'O', '\x3', '\x2', '\x2', '\x2', '\xFA', '\xFE', '\t', '\x12', '\x2', 
		'\x2', '\xFB', '\xFD', '\t', '\x13', '\x2', '\x2', '\xFC', '\xFB', '\x3', 
		'\x2', '\x2', '\x2', '\xFD', '\x100', '\x3', '\x2', '\x2', '\x2', '\xFE', 
		'\xFC', '\x3', '\x2', '\x2', '\x2', '\xFE', '\xFF', '\x3', '\x2', '\x2', 
		'\x2', '\xFF', 'Q', '\x3', '\x2', '\x2', '\x2', '\x100', '\xFE', '\x3', 
		'\x2', '\x2', '\x2', '\x101', '\x102', '\t', '\x14', '\x2', '\x2', '\x102', 
		'\x103', '\x3', '\x2', '\x2', '\x2', '\x103', '\x104', '\b', ')', '\x4', 
		'\x2', '\x104', 'S', '\x3', '\x2', '\x2', '\x2', '\x10', '\x2', '\x3', 
		'[', 'n', 'q', '~', '\x8F', '\x9E', '\xDA', '\xE0', '\xE2', '\xEA', '\xF3', 
		'\xFE', '\x5', '\a', '\x3', '\x2', '\x6', '\x2', '\x2', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Mindbox.Quokka.Generated
